/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SHIELD;

import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AnLaR
 */
public class interfazSHIELD extends javax.swing.JFrame {
    
    DataBase conexion;

    public interfazSHIELD() {
        initComponents(); 
        conexion = new DataBase(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btnBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        interfazSHIELDTabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        nombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        zona = new javax.swing.JLabel();
        txtZona = new javax.swing.JTextField();
        bajas = new javax.swing.JLabel();
        txtBajas = new javax.swing.JTextField();
        Heridos = new javax.swing.JLabel();
        txtHeridos = new javax.swing.JTextField();
        ataque_mutante = new javax.swing.JLabel();
        txtMutante = new javax.swing.JTextField();
        ataque_econom = new javax.swing.JLabel();
        txtEconom = new javax.swing.JTextField();
        ataque_extra = new javax.swing.JLabel();
        txtExtr = new javax.swing.JTextField();
        ataque_invasion = new javax.swing.JLabel();
        txtInvasion = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnlimpiarTab = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtID2 = new javax.swing.JTextField();
        lblID1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        interfazSHIELDTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_Ataque", "Nombre", "Zona", "Bajas", "Heridos", "fk_ataquemutante", "fk_ataqueeconom", "fk_ataqueextr", "fk_ataqueinvasion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        interfazSHIELDTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                interfazSHIELDTablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(interfazSHIELDTabla);

        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("AGREGA UN ATAQUE");

        nombre.setText("Nombre");

        zona.setText("Zona");

        bajas.setText("Bajas");

        Heridos.setText("Heridos");

        txtHeridos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeridosActionPerformed(evt);
            }
        });

        ataque_mutante.setText("fk_ataquemutante");

        ataque_econom.setText("fk_ataque_econom");

        txtEconom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEconomActionPerformed(evt);
            }
        });

        ataque_extra.setText("fk_ataqueextr");

        ataque_invasion.setText("fk_ataqueinvasion");

        btnAgregar.setText("Agregar");
        btnAgregar.setToolTipText("Agrega un nuevo ataque");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnlimpiarTab.setText("Limpiar Tabla");
        btnlimpiarTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarTabActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.setToolTipText("Actualiza la tabla");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Elimina los datos de la fila seleccionada");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        lblID.setText("ID_Ataque");

        txtID.setEditable(false);

        lblID1.setText("ID_Ataque");
        lblID1.setToolTipText("Busca un ataque especifico");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(lblID1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtID2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnBuscar)
                        .addGap(24, 24, 24)
                        .addComponent(btnEliminar)
                        .addGap(26, 26, 26)
                        .addComponent(btnActualizar)
                        .addGap(28, 28, 28)
                        .addComponent(btnlimpiarTab))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ataque_mutante)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMutante))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ataque_econom)
                                .addComponent(ataque_extra))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtEconom)
                                .addComponent(txtExtr, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ataque_invasion)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(38, 38, 38)
                                    .addComponent(btnAgregar))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtInvasion, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblID)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(nombre))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Heridos)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(zona)
                                            .addComponent(bajas)))
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHeridos, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtZona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBajas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel1)))))
                .addGap(160, 160, 160))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID1)
                    .addComponent(txtID2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar)
                            .addComponent(btnlimpiarTab)
                            .addComponent(btnActualizar)
                            .addComponent(btnEliminar)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Heridos)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nombre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(zona))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtBajas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bajas))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHeridos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ataque_mutante, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMutante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ataque_econom)
                            .addComponent(txtEconom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ataque_extra)
                            .addComponent(txtExtr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ataque_invasion)
                            .addComponent(txtInvasion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(btnAgregar)))
                .addContainerGap(132, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        ResultSet result; 
        Object[] datos = new Object[9]; 
        DefaultTableModel model = (DefaultTableModel) interfazSHIELDTabla.getModel(); 
        
        
        if (txtID2.getText().equals("")) {
            result = conexion.getQuery("select * from ataque");        
        } else {
            result = conexion.getQuery("select * from ataque where id = " + txtID2.getText());
        }
        
        
        try
            {
                
                while(result.next())
                {
                    
                    datos[0] = result.getInt("id");
                    datos[1] = result.getString("nombre");
                    datos[2] = result.getString("zona");
                    datos[3] = result.getInt("bajas");
                    datos[4] = result.getInt("heridos");
                    datos[5] = result.getInt("fk_ataquemutante");
                    datos[6] = result.getInt("fk_ataqueeconom");
                    datos[7] = result.getInt("fk_ataqueextr");
                    datos[8] = result.getInt("fk_ataqueinvasion");
    //                            System.out.println(nombre + ": ");
    //                            System.out.println("zona: " + zona );
    //                            System.out.println("bajas: " + bajas);
    //                            System.out.println("heridos: " + heridos);
    //                            System.out.println("id de ataque mutante: " + fk_ataquemutante);
    //                            System.out.println("id de ataque economico: " + fk_ataqueeconom);
    //                            System.out.println("id de ataque extraterrestre: " + fk_ataqueextr);
    //                            System.out.println("id de ataque invasion: " + fk_ataqueinvasion);
                    // System.out.println(Arrays.toString(datos));
                    model.addRow(datos); 

                }
            }
            catch (SQLException e)
            {
                    e.printStackTrace();
            }
        
    }                                         

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {                                           

        String nombre, zona;
        int bajas, heridos, fk_mutante, fk_econom, fk_extra, fk_invasion;
        
        nombre = txtNombre.getText();
        zona = txtZona.getText();
        
        bajas = Integer.parseInt(txtBajas.getText());
        heridos = Integer.parseInt(txtHeridos.getText());
        fk_mutante = Integer.parseInt(txtMutante.getText());
        fk_econom = Integer.parseInt(txtEconom.getText());
        fk_extra = Integer.parseInt(txtExtr.getText());
        fk_invasion = Integer.parseInt(txtInvasion.getText());
        
        try {
            
            PreparedStatement ps = conexion.getConnection().prepareStatement("INSERT INTO ataque(nombre, zona, bajas, heridos, fk_ataquemutante, fk_ataqueeconom, fk_ataqueextr, fk_ataqueinvasion) VALUES(?,?,?,?,?,?,?,?)");
            
            ps.setString(1, nombre);
            ps.setString(2, zona);
            ps.setInt(3, bajas);
            ps.setInt(4, heridos);
            
            
            if (fk_mutante <= 0) {
                ps.setObject(5, null);
            } else {
                ps.setInt(5, fk_mutante);
            }
            
            if (fk_econom <= 0) {
                ps.setObject(6, null);
            } else {
                ps.setInt(6, fk_econom);
            }
            
            if (fk_extra <= 0) {
                ps.setObject(7, null);
            } else {
                ps.setInt(7, fk_extra);
            }
            
            if (fk_invasion <= 0) {
                ps.setObject(8, null);
            } else {
                ps.setInt(8, fk_invasion);
            }
            
            
            int estado = ps.executeUpdate();
            
            if (estado == 1) {
                System.out.println("Se inserto en la base de datos");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(interfazSHIELD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                          

    private void txtHeridosActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void txtEconomActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void btnlimpiarTabActionPerformed(java.awt.event.ActionEvent evt) {                                              
        DefaultTableModel model= (DefaultTableModel) interfazSHIELDTabla.getModel(); 
        model.setRowCount(0); 
            
    }                                             

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {                                              
        try {
            String nombre, zona;
        int  id_ataque, bajas, heridos, fk_mutante, fk_econom, fk_extra, fk_invasion;
        nombre = txtNombre.getText();
        zona = txtZona.getText();
        id_ataque = Integer.parseInt(txtID.getText()); 
        
        bajas = Integer.parseInt(txtBajas.getText());
        heridos = Integer.parseInt(txtHeridos.getText());
        fk_mutante = Integer.parseInt(txtMutante.getText());
        fk_econom = Integer.parseInt(txtEconom.getText());
        fk_extra = Integer.parseInt(txtExtr.getText());
        fk_invasion = Integer.parseInt(txtInvasion.getText());
            
        
            PreparedStatement ps = conexion.getConnection().prepareStatement("UPDATE ataque SET nombre = ?, zona = ?, bajas = ?, heridos = ?, fk_ataquemutante = ?, fk_ataqueeconom = ?, fk_ataqueextr = ?, fk_ataqueinvasion = ? WHERE id = ?");
            ps.setString(1, nombre);
            ps.setString(2, zona);
            ps.setInt(3, bajas);
            ps.setInt(4, heridos);
            if (fk_mutante <= 0) {
                ps.setObject(5, null);
            } else {
                ps.setInt(5, fk_mutante);
            }
            
            if (fk_econom <= 0) {
                ps.setObject(6, null);
            } else {
                ps.setInt(6, fk_econom);
            }
            
            if (fk_extra <= 0) {
                ps.setObject(7, null);
            } else {
                ps.setInt(7, fk_extra);
            }
            
            if (fk_invasion <= 0) {
                ps.setObject(8, null);
            } else {
                ps.setInt(8, fk_invasion);
            }
            
            ps.setInt(9, id_ataque);
            
            
            int estado = ps.executeUpdate();
            
            if (estado == 1) {
                System.out.println("Se actualizo en la base de datos");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(interfazSHIELD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                             

    private void interfazSHIELDTablaMouseClicked(java.awt.event.MouseEvent evt) {                                                 

        DefaultTableModel model= (DefaultTableModel) interfazSHIELDTabla.getModel(); // obtenemos el modelo/estructura de la tabla
        int row = interfazSHIELDTabla.getSelectedRow(); 
        
        // establece todos los campos de texto con estos datos
        txtID.setText(model.getValueAt(row, 0).toString()); 
        txtNombre.setText(model.getValueAt(row, 1).toString());
        txtZona.setText(model.getValueAt(row, 2).toString());
        txtBajas.setText(model.getValueAt(row, 3).toString());
        txtHeridos.setText(model.getValueAt(row, 4).toString());
        txtMutante.setText(model.getValueAt(row, 5).toString());
        txtEconom.setText(model.getValueAt(row, 6).toString());
        txtExtr.setText(model.getValueAt(row, 7).toString());
        txtInvasion.setText(model.getValueAt(row, 8).toString());
                
    }                                                

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        try {
            
            PreparedStatement ps = conexion.getConnection().prepareStatement("DELETE FROM ataque WHERE id = ?");
            ps.setInt(1, Integer.parseInt(txtID.getText()) );
            
            int estado = ps.executeUpdate();
            
            if (estado == 1) {
                System.out.println("Se elimino en la base de datos");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(interfazSHIELD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfazSHIELD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfazSHIELD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfazSHIELD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfazSHIELD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfazSHIELD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel Heridos;
    private javax.swing.JLabel ataque_econom;
    private javax.swing.JLabel ataque_extra;
    private javax.swing.JLabel ataque_invasion;
    private javax.swing.JLabel ataque_mutante;
    private javax.swing.JLabel bajas;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnlimpiarTab;
    private javax.swing.JTable interfazSHIELDTabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblID1;
    private javax.swing.JLabel nombre;
    private javax.swing.JTextField txtBajas;
    private javax.swing.JTextField txtEconom;
    private javax.swing.JTextField txtExtr;
    private javax.swing.JTextField txtHeridos;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtID2;
    private javax.swing.JTextField txtInvasion;
    private javax.swing.JTextField txtMutante;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtZona;
    private javax.swing.JLabel zona;
    // End of variables declaration                   

}
